{"version":3,"sources":["ng://angular-mentions/lib/mention-utils.ts","ng://angular-mentions/lib/caret-coords.ts","ng://angular-mentions/lib/mention-list.component.ts","ng://angular-mentions/lib/mention.directive.ts","ng://angular-mentions/lib/mention.module.ts"],"names":["getValue","el","isInputOrTextAreaElement","value","textContent","insertValue","start","end","text","iframe","noRecursion","isTextElement","nodeName","val","setValue","substring","length","setCaretPosition","selObj","getWindowSelection","rangeCount","position","getRangeAt","startOffset","anchorNode","pos","selectionStart","focus","setSelectionRange","range","getDocument","createRange","setStart","collapse","sel","removeAllRanges","addRange","getCaretPosition","slice","selRange","preCaretRange","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","toString","contentWindow","document","getSelection","window","getContentEditableCaretCoords","ctx","markerId","Date","getTime","Math","random","substr","doc","prevRange","markerEl","createElement","id","appendChild","createTextNode","insertNode","coordinates","left","top","offsetHeight","localToRelativeCoordinates","element","obj","parent","offsetLeft","clientLeft","offsetTop","clientTop","body","scrollTop","scrollLeft","parentNode","removeChild","properties","isBrowser","isFirefox","MentionListComponent","prototype","ngOnInit","this","itemTemplate","defaultItemTemplate","nativeParentElement","coords","getCaretCoordinates","options","Error","debug","querySelector","div","style","computed","getComputedStyle","currentStyle","isInput","whiteSpace","wordWrap","visibility","forEach","prop","boxSizing","height","parseInt","outerHeight","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","targetHeight","lineHeight","scrollHeight","overflowY","overflow","replace","span","backgroundColor","offset","getBlockCursorDimensions","context","offsetParent","documentElement","pageXOffset","pageYOffset","caretRelativeToView","parentRelativeToContainer","getBoundingClientRect","positionElement","Object","defineProperty","items","activeIndex","activateNextItem","listEl","list","nativeElement","activeEl","getElementsByClassName","item","nextLiEl","nextLiRect","bottom","clientHeight","max","min","activatePreviousItem","prevLiEl","reset","checkBounds","dropUp","bounds","width","innerWidth","className","parentStyles","parseFloat","fontSize","Component","args","selector","template","ElementRef","Input","Output","ViewChild","labelKey","itemClick","EventEmitter","hidden","styleOff","MentionDirective","mentionItems","ngOnChanges","changes","updateConfig","_this","config","mentionConfig","triggerChars","addConfig","mentions","defaults","assign","DEFAULT_CONFIG","map","label","object","filter","e","disableSort","sort","a","b","localeCompare","triggerChar","activeConfig","updateSearchList","setIframe","stopEvent","event","wasClick","preventDefault","stopPropagation","stopImmediatePropagation","blurHandler","stopSearch","inputHandler","_element","lastKeyCode","data","keyCode","charCodeAt","keyHandler","inputEvent","isComposing","charPressed","key","charCode","which","shiftKey","String","fromCharCode","startPos","startNode","searching","searchString","showSearchList","returnTrigger","searchTerm","emit","searchList","metaKey","altKey","ctrlKey","allowSpace","mentionSelect","activeItem","evt","createEvent","initEvent","dispatchEvent","mention","startSearch","closed","matches","objects","disableSearch","searchStringLowerCase_1","toLowerCase","startsWith","maxItems","opened","componentFactory","_componentResolver","resolveComponentFactory","componentRef","_viewContainerRef","createComponent","instance","mentionListTemplate","subscribe","fakeKeydown","disableStyle","setTimeout","Directive","host","(keydown)","(input)","(blur)","autocomplete","ComponentFactoryResolver","ViewContainerRef","MentionModule","NgModule","declarations","imports","CommonModule","exports","entryComponents"],"mappings":"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","sourcesContent":["// DOM element manipulation functions...\r\n//\r\n\r\nfunction setValue(el: HTMLInputElement, value: any) {\r\n  //console.log(\"setValue\", el.nodeName, \"[\"+value+\"]\");\r\n  if (isInputOrTextAreaElement(el)) {\r\n    el.value = value;\r\n  }\r\n  else {\r\n    el.textContent = value;\r\n  }\r\n}\r\n\r\nexport function getValue(el: HTMLInputElement) {\r\n  return isInputOrTextAreaElement(el) ? el.value : el.textContent;\r\n}\r\n\r\nexport function insertValue(\r\n  el: HTMLInputElement,\r\n  start: number,\r\n  end: number,\r\n  text: string,\r\n  iframe: HTMLIFrameElement,\r\n  noRecursion: boolean = false\r\n) {\r\n  //console.log(\"insertValue\", el.nodeName, start, end, \"[\"+text+\"]\", el);\r\n  if (isTextElement(el)) {\r\n    let val = getValue(el);\r\n    setValue(el, val.substring(0, start) + text + val.substring(end, val.length));\r\n    setCaretPosition(el, start + text.length, iframe);\r\n  }\r\n  else if (!noRecursion) {\r\n    let selObj: Selection = getWindowSelection(iframe);\r\n    if (selObj && selObj.rangeCount > 0) {\r\n      var selRange = selObj.getRangeAt(0);\r\n      var position = selRange.startOffset;\r\n      var anchorNode = selObj.anchorNode;\r\n      // if (text.endsWith(' ')) {\r\n      //   text = text.substring(0, text.length-1) + '\\xA0';\r\n      // }\r\n      insertValue(<HTMLInputElement>anchorNode, position - (end - start), position, text, iframe, true);\r\n    }\r\n  }\r\n}\r\n\r\nexport function isInputOrTextAreaElement(el: HTMLElement): boolean {\r\n  return el != null && (el.nodeName == 'INPUT' || el.nodeName == 'TEXTAREA');\r\n};\r\n\r\nexport function isTextElement(el: HTMLElement): boolean {\r\n  return el != null && (el.nodeName == 'INPUT' || el.nodeName == 'TEXTAREA' || el.nodeName == '#text');\r\n};\r\n\r\nexport function setCaretPosition(el: HTMLInputElement, pos: number, iframe: HTMLIFrameElement = null) {\r\n  //console.log(\"setCaretPosition\", pos, el, iframe==null);\r\n  if (isInputOrTextAreaElement(el) && el.selectionStart) {\r\n    el.focus();\r\n    el.setSelectionRange(pos, pos);\r\n  }\r\n  else {\r\n    let range = getDocument(iframe).createRange();\r\n    range.setStart(el, pos);\r\n    range.collapse(true);\r\n    let sel = getWindowSelection(iframe);\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n  }\r\n}\r\n\r\nexport function getCaretPosition(el: HTMLInputElement, iframe: HTMLIFrameElement = null) {\r\n  //console.log(\"getCaretPosition\", el);\r\n  if (isInputOrTextAreaElement(el)) {\r\n    var val = el.value;\r\n    return val.slice(0, el.selectionStart).length;\r\n  }\r\n  else {\r\n    var selObj = getWindowSelection(iframe); //window.getSelection();\r\n    if (selObj.rangeCount > 0) {\r\n      var selRange = selObj.getRangeAt(0);\r\n      var preCaretRange = selRange.cloneRange();\r\n      preCaretRange.selectNodeContents(el);\r\n      preCaretRange.setEnd(selRange.endContainer, selRange.endOffset);\r\n      var position = preCaretRange.toString().length;\r\n      return position;\r\n    }\r\n  }\r\n}\r\n\r\n// Based on ment.io functions...\r\n//\r\n\r\nfunction getDocument(iframe: HTMLIFrameElement) {\r\n  if (!iframe) {\r\n    return document;\r\n  } else {\r\n    return iframe.contentWindow.document;\r\n  }\r\n}\r\n\r\nfunction getWindowSelection(iframe: HTMLIFrameElement): Selection {\r\n  if (!iframe) {\r\n    return window.getSelection();\r\n  } else {\r\n    return iframe.contentWindow.getSelection();\r\n  }\r\n}\r\n\r\nexport function getContentEditableCaretCoords(ctx: { iframe: HTMLIFrameElement, parent?: Element }) {\r\n  let markerTextChar = '\\ufeff';\r\n  let markerId = 'sel_' + new Date().getTime() + '_' + Math.random().toString().substr(2);\r\n  let doc = getDocument(ctx ? ctx.iframe : null);\r\n  let sel = getWindowSelection(ctx ? ctx.iframe : null);\r\n  let prevRange = sel.getRangeAt(0);\r\n\r\n  // create new range and set postion using prevRange\r\n  let range = doc.createRange();\r\n  range.setStart(sel.anchorNode, prevRange.startOffset);\r\n  range.setEnd(sel.anchorNode, prevRange.startOffset);\r\n  range.collapse(false);\r\n\r\n  // Create the marker element containing a single invisible character\r\n  // using DOM methods and insert it at the position in the range\r\n  let markerEl = doc.createElement('span');\r\n  markerEl.id = markerId;\r\n  markerEl.appendChild(doc.createTextNode(markerTextChar));\r\n  range.insertNode(markerEl);\r\n  sel.removeAllRanges();\r\n  sel.addRange(prevRange);\r\n\r\n  let coordinates = {\r\n    left: 0,\r\n    top: markerEl.offsetHeight\r\n  };\r\n\r\n  localToRelativeCoordinates(ctx, markerEl, coordinates);\r\n\r\n  markerEl.parentNode.removeChild(markerEl);\r\n  return coordinates;\r\n}\r\n\r\nfunction localToRelativeCoordinates(\r\n  ctx: { iframe: HTMLIFrameElement, parent?: Element },\r\n  element: Element,\r\n  coordinates: { top: number; left: number }\r\n) {\r\n  let obj = <HTMLElement>element;\r\n  let iframe = ctx ? ctx.iframe : null;\r\n  while (obj) {\r\n    if (ctx.parent != null && ctx.parent == obj) {\r\n      break;\r\n    }\r\n    coordinates.left += obj.offsetLeft + obj.clientLeft;\r\n    coordinates.top += obj.offsetTop + obj.clientTop;\r\n    obj = <HTMLElement>obj.offsetParent;\r\n    if (!obj && iframe) {\r\n      obj = iframe;\r\n      iframe = null;\r\n    }\r\n  }\r\n  obj = <HTMLElement>element;\r\n  iframe = ctx ? ctx.iframe : null;\r\n  while (obj !== getDocument(null).body && obj != null) {\r\n    if (ctx.parent != null && ctx.parent == obj) {\r\n      break;\r\n    }\r\n    if (obj.scrollTop && obj.scrollTop > 0) {\r\n      coordinates.top -= obj.scrollTop;\r\n    }\r\n    if (obj.scrollLeft && obj.scrollLeft > 0) {\r\n      coordinates.left -= obj.scrollLeft;\r\n    }\r\n    obj = <HTMLElement>obj.parentNode;\r\n    if (!obj && iframe) {\r\n      obj = iframe;\r\n      iframe = null;\r\n    }\r\n  }\r\n}\r\n","/* From: https://github.com/component/textarea-caret-position */\r\n/* jshint browser: true */\r\n\r\n// (function () {\r\n\r\n  // We'll copy the properties below into the mirror div.\r\n  // Note that some browsers, such as Firefox, do not concatenate properties\r\n  // into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\r\n  // so we have to list every single property explicitly.\r\n  var properties = [\r\n    'direction',  // RTL support\r\n    'boxSizing',\r\n    'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\r\n    'height',\r\n    'overflowX',\r\n    'overflowY',  // copy the scrollbar for IE\r\n\r\n    'borderTopWidth',\r\n    'borderRightWidth',\r\n    'borderBottomWidth',\r\n    'borderLeftWidth',\r\n    'borderStyle',\r\n\r\n    'paddingTop',\r\n    'paddingRight',\r\n    'paddingBottom',\r\n    'paddingLeft',\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n    'fontStyle',\r\n    'fontVariant',\r\n    'fontWeight',\r\n    'fontStretch',\r\n    'fontSize',\r\n    'fontSizeAdjust',\r\n    'lineHeight',\r\n    'fontFamily',\r\n\r\n    'textAlign',\r\n    'textTransform',\r\n    'textIndent',\r\n    'textDecoration',  // might not make a difference, but better be safe\r\n\r\n    'letterSpacing',\r\n    'wordSpacing',\r\n\r\n    'tabSize',\r\n    'MozTabSize'\r\n\r\n  ];\r\n\r\n  var isBrowser = (typeof window !== 'undefined');\r\n  var isFirefox = (isBrowser && window['mozInnerScreenX'] != null);\r\n\r\n  export function getCaretCoordinates(element, position, options) {\r\n    if (!isBrowser) {\r\n      throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\r\n    }\r\n\r\n    var debug = options && options.debug || false;\r\n    if (debug) {\r\n      var el = document.querySelector('#input-textarea-caret-position-mirror-div');\r\n      if (el) el.parentNode.removeChild(el);\r\n    }\r\n\r\n    // The mirror div will replicate the textarea's style\r\n    var div = document.createElement('div');\r\n    div.id = 'input-textarea-caret-position-mirror-div';\r\n    document.body.appendChild(div);\r\n\r\n    var style = div.style;\r\n    var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\r\n    var isInput = element.nodeName === 'INPUT';\r\n\r\n    // Default textarea styles\r\n    style.whiteSpace = 'pre-wrap';\r\n    if (!isInput)\r\n      style.wordWrap = 'break-word';  // only for textarea-s\r\n\r\n    // Position off-screen\r\n    style.position = 'absolute';  // required to return coordinates properly\r\n    if (!debug)\r\n      style.visibility = 'hidden';  // not 'display: none' because we want rendering\r\n\r\n    // Transfer the element's properties to the div\r\n    properties.forEach(function (prop) {\r\n      if (isInput && prop === 'lineHeight') {\r\n        // Special case for <input>s because text is rendered centered and line height may be != height\r\n        if (computed.boxSizing === \"border-box\") {\r\n          var height = parseInt(computed.height);\r\n          var outerHeight =\r\n            parseInt(computed.paddingTop) +\r\n            parseInt(computed.paddingBottom) +\r\n            parseInt(computed.borderTopWidth) +\r\n            parseInt(computed.borderBottomWidth);\r\n          var targetHeight = outerHeight + parseInt(computed.lineHeight);\r\n          if (height > targetHeight) {\r\n            style.lineHeight = height - outerHeight + \"px\";\r\n          } else if (height === targetHeight) {\r\n            style.lineHeight = computed.lineHeight;\r\n          } else {\r\n            style.lineHeight = '0';\r\n          }\r\n        } else {\r\n          style.lineHeight = computed.height;\r\n        }\r\n      } else {\r\n        style[prop] = computed[prop];\r\n      }\r\n    });\r\n\r\n    if (isFirefox) {\r\n      // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\r\n      if (element.scrollHeight > parseInt(computed.height))\r\n        style.overflowY = 'scroll';\r\n    } else {\r\n      style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\r\n    }\r\n\r\n    div.textContent = element.value.substring(0, position);\r\n    // The second special handling for input type=\"text\" vs textarea:\r\n    // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\r\n    if (isInput)\r\n      div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\r\n\r\n    var span = document.createElement('span');\r\n    // Wrapping must be replicated *exactly*, including when a long word gets\r\n    // onto the next line, with whitespace at the end of the line before (#7).\r\n    // The  *only* reliable way to do that is to copy the *entire* rest of the\r\n    // textarea's content into the <span> created at the caret position.\r\n    // For inputs, just '.' would be enough, but no need to bother.\r\n    span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\r\n    div.appendChild(span);\r\n\r\n    var coordinates = {\r\n      top: span.offsetTop + parseInt(computed['borderTopWidth']),\r\n      left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\r\n      height: parseInt(computed['lineHeight'])\r\n    };\r\n\r\n    if (debug) {\r\n      span.style.backgroundColor = '#aaa';\r\n    } else {\r\n      document.body.removeChild(div);\r\n    }\r\n\r\n    return coordinates;\r\n  }\r\n\r\n  // if (typeof module != 'undefined' && typeof module.exports != 'undefined') {\r\n  //   module.exports = getCaretCoordinates;\r\n  // } else if(isBrowser) {\r\n  //   window.getCaretCoordinates = getCaretCoordinates;\r\n  // }\r\n\r\n  // }());","import {\r\n  Component, ElementRef, Output, EventEmitter, ViewChild, Input, TemplateRef, OnInit\r\n} from '@angular/core';\r\n\r\nimport { isInputOrTextAreaElement, getContentEditableCaretCoords } from './mention-utils';\r\nimport { getCaretCoordinates } from './caret-coords';\r\n\r\n/**\r\n * Angular Mentions.\r\n * https://github.com/w222w/angular-mentions\r\n *\r\n * Copyright (c) 2016 Dan MacFarlane\r\n */\r\n@Component({\r\n  selector: 'mention-list',\r\n  styleUrls: ['./mention-list.component.scss'],\r\n  template: `\r\n    <ng-template #defaultItemTemplate let-item=\"item\">\r\n      {{item[labelKey]}}\r\n    </ng-template>\r\n    <ul #list [hidden]=\"hidden\" class=\"dropdown-menu scrollable-menu\"\r\n      [class.mention-menu]=\"!styleOff\" [class.mention-dropdown]=\"!styleOff && dropUp\">\r\n      <li *ngFor=\"let item of items; let i = index\"\r\n        [class.active]=\"activeIndex==i\" [class.mention-active]=\"!styleOff && activeIndex==i\">\r\n        <a class=\"dropdown-item\" [class.mention-item]=\"!styleOff\"\r\n          (mousedown)=\"activeIndex=i;itemClick.emit();$event.preventDefault()\"\n          (tap)=\"activeIndex=i;itemClick.emit();$event.preventDefault()\"\n          >\r\n          <ng-template [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{'item':item}\"></ng-template>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    `\r\n})\r\nexport class MentionListComponent implements OnInit {\r\n  @Input() labelKey: string = 'label';\r\n  @Input() itemTemplate: TemplateRef<any>;\r\n  @Output() itemClick = new EventEmitter();\r\n  @ViewChild('list') list: ElementRef;\r\n  @ViewChild('defaultItemTemplate') defaultItemTemplate: TemplateRef<any>;\r\n  items = [];\r\n  activeIndex: number = 0;\r\n  hidden: boolean = false;\r\n  dropUp: boolean = false;\r\n  styleOff: boolean = false;\r\n  private coords: {top:number, left:number} = {top:0, left:0};\r\n  private offset: number = 0;\r\n  constructor(private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    if (!this.itemTemplate) {\r\n      this.itemTemplate = this.defaultItemTemplate;\r\n    }\r\n  }\r\n\r\n  // lots of confusion here between relative coordinates and containers\r\n  position(nativeParentElement: HTMLInputElement, iframe: HTMLIFrameElement = null) {\r\n    if (isInputOrTextAreaElement(nativeParentElement)) {\r\n      // parent elements need to have postition:relative for this to work correctly?\r\n      this.coords = getCaretCoordinates(nativeParentElement, nativeParentElement.selectionStart, null);\r\n      this.coords.top = nativeParentElement.offsetTop + this.coords.top - nativeParentElement.scrollTop;\r\n      this.coords.left = nativeParentElement.offsetLeft + this.coords.left - nativeParentElement.scrollLeft;\r\n      // getCretCoordinates() for text/input elements needs an additional offset to position the list correctly\r\n      this.offset = this.getBlockCursorDimensions(nativeParentElement).height;\r\n    }\r\n    else if (iframe) {\r\n      let context: { iframe: HTMLIFrameElement, parent: Element } = { iframe: iframe, parent: iframe.offsetParent };\r\n      this.coords = getContentEditableCaretCoords(context);\r\n    }\r\n    else {\r\n      let doc = document.documentElement;\r\n      let scrollLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n      let scrollTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n      // bounding rectangles are relative to view, offsets are relative to container?\r\n      let caretRelativeToView = getContentEditableCaretCoords({ iframe: iframe });\r\n      let parentRelativeToContainer: ClientRect = nativeParentElement.getBoundingClientRect();\r\n      this.coords.top = caretRelativeToView.top - parentRelativeToContainer.top + nativeParentElement.offsetTop - scrollTop;\r\n      this.coords.left = caretRelativeToView.left - parentRelativeToContainer.left + nativeParentElement.offsetLeft - scrollLeft;\r\n    }\r\n    // set the default/inital position\r\n    this.positionElement();\r\n  }\r\n\r\n  get activeItem() {\r\n    return this.items[this.activeIndex];\r\n  }\r\n\r\n  activateNextItem() {\r\n    // adjust scrollable-menu offset if the next item is out of view\r\n    let listEl: HTMLElement = this.list.nativeElement;\r\n    let activeEl = listEl.getElementsByClassName('active').item(0);\r\n    if (activeEl) {\r\n      let nextLiEl: HTMLElement = <HTMLElement> activeEl.nextSibling;\r\n      if (nextLiEl && nextLiEl.nodeName == \"LI\") {\r\n        let nextLiRect: ClientRect = nextLiEl.getBoundingClientRect();\r\n        if (nextLiRect.bottom > listEl.getBoundingClientRect().bottom) {\r\n          listEl.scrollTop = nextLiEl.offsetTop + nextLiRect.height - listEl.clientHeight;\r\n        }\r\n      }\r\n    }\r\n    // select the next item\r\n    this.activeIndex = Math.max(Math.min(this.activeIndex + 1, this.items.length - 1), 0);\r\n  }\r\n\r\n  activatePreviousItem() {\r\n    // adjust the scrollable-menu offset if the previous item is out of view\r\n    let listEl: HTMLElement = this.list.nativeElement;\r\n    let activeEl = listEl.getElementsByClassName('active').item(0);\r\n    if (activeEl) {\r\n      let prevLiEl: HTMLElement = <HTMLElement> activeEl.previousSibling;\r\n      if (prevLiEl && prevLiEl.nodeName == \"LI\") {\r\n        let prevLiRect: ClientRect = prevLiEl.getBoundingClientRect();\r\n        if (prevLiRect.top < listEl.getBoundingClientRect().top) {\r\n          listEl.scrollTop = prevLiEl.offsetTop;\r\n        }\r\n      }\r\n    }\r\n    // select the previous item\r\n    this.activeIndex = Math.max(Math.min(this.activeIndex - 1, this.items.length - 1), 0);\r\n  }\r\n\r\n  // reset for a new mention search\r\n  reset() {\r\n    this.list.nativeElement.scrollTop = 0;\r\n    this.checkBounds();\r\n  }\r\n\r\n  // final positioning is done after the list is shown (and the height and width are known)\r\n  // ensure it's in the page bounds\r\n  private checkBounds() {\r\n    let left = this.coords.left, top = this.coords.top, dropUp = this.dropUp;\r\n    const bounds: ClientRect = this.list.nativeElement.getBoundingClientRect();\r\n    // if off right of page, align right\r\n    if (bounds.left + bounds.width > window.innerWidth) {\r\n      left -= bounds.left + bounds.width - window.innerWidth + 10;\r\n    }\r\n    // if more than half off the bottom of the page, force dropUp\r\n    // if ((bounds.top+bounds.height/2)>window.innerHeight) {\r\n    //   dropUp = true;\r\n    // }\r\n    // if top is off page, disable dropUp\r\n    if (bounds.top<0) {\r\n      dropUp = false;\r\n    }\r\n    // set the revised/final position\r\n    this.positionElement(left, top, dropUp);\r\n  }\r\n\r\n  private positionElement(left:number=this.coords.left, top:number=this.coords.top, dropUp:boolean=this.dropUp) {\r\n    const el: HTMLElement = this.element.nativeElement;\r\n    top += dropUp ? 0 : this.offset; // top of list is next line\r\n    el.className = dropUp ? 'dropup' : null;\r\n    el.style.position = \"absolute\";\r\n    el.style.left = left + 'px';\r\n    el.style.top = top + 'px';\r\n  }\r\n\r\n  private getBlockCursorDimensions(nativeParentElement: HTMLInputElement) {\r\n    const parentStyles = window.getComputedStyle(nativeParentElement);\r\n    return {\r\n      height: parseFloat(parentStyles.lineHeight),\r\n      width: parseFloat(parentStyles.fontSize)\r\n    };\r\n  }\r\n}\r\n","import { ComponentFactoryResolver, Directive, ElementRef, TemplateRef, ViewContainerRef } from \"@angular/core\";\r\nimport { EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\r\nimport { getCaretPosition, getValue, insertValue, setCaretPosition } from './mention-utils';\r\n\r\nimport { MentionConfig } from \"./mention-config\";\r\nimport { MentionListComponent } from './mention-list.component';\r\n\r\nconst KEY_BACKSPACE = 8;\r\nconst KEY_TAB = 9;\r\nconst KEY_ENTER = 13;\r\nconst KEY_SHIFT = 16;\r\nconst KEY_ESCAPE = 27;\r\nconst KEY_SPACE = 32;\r\nconst KEY_LEFT = 37;\r\nconst KEY_UP = 38;\r\nconst KEY_RIGHT = 39;\r\nconst KEY_DOWN = 40;\r\nconst KEY_BUFFERED = 229;\r\n\r\n/**\r\n * Angular Mentions.\r\n * https://github.com/w222w/angular-mentions\r\n *\r\n * Copyright (c) 2017 Dan MacFarlane\r\n */\r\n@Directive({\r\n  selector: '[mention], [mentionConfig]',\r\n  host: {\r\n    '(keydown)': 'keyHandler($event)',\r\n    '(input)': 'inputHandler($event)',\r\n    '(blur)': 'blurHandler($event)',\r\n    'autocomplete': 'off'\r\n  }\r\n})\r\nexport class MentionDirective implements OnChanges {\r\n\r\n  // stores the items passed to the mentions directive and used to populate the root items in mentionConfig\r\n  private mentionItems: any[];\r\n\r\n  @Input('mention') set mention(items: any[]) {\r\n    this.mentionItems = items;\r\n  }\r\n\r\n  // the provided configuration object\r\n  @Input() mentionConfig: MentionConfig = { items: [] };\r\n\r\n  private activeConfig: MentionConfig;\r\n\r\n  private DEFAULT_CONFIG: MentionConfig = {\r\n    items: [],\r\n    triggerChar: '@',\r\n    labelKey: 'label',\r\n    maxItems: -1,\r\n    allowSpace: false,\r\n    returnTrigger: false,\r\n    mentionSelect: (item: any) => this.activeConfig.triggerChar + item[this.activeConfig.labelKey]\r\n  }\r\n\r\n  // template to use for rendering list items\r\n  @Input() mentionListTemplate: TemplateRef<any>;\r\n\r\n  // event emitted whenever the search term changes\r\n  @Output() searchTerm = new EventEmitter<string>();\r\n\r\n  // event emitted whenever the mention list is opened or closed\r\n  @Output() opened = new EventEmitter();\r\n  @Output() closed = new EventEmitter();\r\n\r\n  private triggerChars: { [key: string]: MentionConfig } = {};\r\n\r\n  private searchString: string;\r\n  private startPos: number;\r\n  private startNode;\r\n  private searchList: MentionListComponent;\r\n  private searching: boolean;\r\n  private iframe: any; // optional\r\n  private lastKeyCode: number;\r\n\r\n  constructor(\r\n    private _element: ElementRef,\r\n    private _componentResolver: ComponentFactoryResolver,\r\n    private _viewContainerRef: ViewContainerRef\r\n  ) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // console.log('config change', changes);\r\n    if (changes['mention'] || changes['mentionConfig']) {\r\n      this.updateConfig();\r\n    }\r\n  }\r\n\r\n  public updateConfig() {\r\n    let config = this.mentionConfig;\r\n    this.triggerChars = {};\r\n    // use items from directive if they have been set\r\n    if (this.mentionItems) {\r\n      config.items = this.mentionItems;\r\n    }\r\n    this.addConfig(config);\r\n    // nested configs\r\n    if (config.mentions) {\r\n      config.mentions.forEach(config => this.addConfig(config));\r\n    }\r\n  }\r\n\r\n  // add configuration for a trigger char\r\n  private addConfig(config: MentionConfig) {\r\n    // defaults\r\n    let defaults = Object.assign({}, this.DEFAULT_CONFIG);\r\n    config = Object.assign(defaults, config);\r\n    // items\r\n    let items = config.items;\r\n    if (items && items.length > 0) {\r\n      // convert strings to objects\r\n      if (typeof items[0] == 'string') {\r\n        items = items.map((label) => {\r\n          let object = {};\r\n          object[config.labelKey] = label;\r\n          return object;\r\n        });\r\n      }\r\n      if (config.labelKey) {\r\n        // remove items without an labelKey (as it's required to filter the list)\r\n        items = items.filter(e => e[config.labelKey]);\r\n        if (!config.disableSort) {\r\n          items.sort((a, b) => a[config.labelKey].localeCompare(b[config.labelKey]));\r\n        }\r\n      }\r\n    }\r\n    config.items = items;\r\n\r\n    // add the config\r\n    this.triggerChars[config.triggerChar] = config;\r\n\r\n    // for async update while menu/search is active\r\n    if (this.activeConfig && this.activeConfig.triggerChar == config.triggerChar) {\r\n      this.activeConfig = config;\r\n      this.updateSearchList();\r\n    }\r\n  }\r\n\r\n  setIframe(iframe: HTMLIFrameElement) {\r\n    this.iframe = iframe;\r\n  }\r\n\r\n  stopEvent(event: any) {\r\n    //if (event instanceof KeyboardEvent) { // does not work for iframe\r\n    if (!event.wasClick) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      event.stopImmediatePropagation();\r\n    }\r\n  }\r\n\r\n  blurHandler(event: any) {\r\n    this.stopEvent(event);\r\n    this.stopSearch();\r\n  }\r\n\r\n  inputHandler(event: any, nativeElement: HTMLInputElement = this._element.nativeElement) {\r\n    if (this.lastKeyCode === KEY_BUFFERED && event.data) {\r\n      let keyCode = event.data.charCodeAt(0);\r\n      this.keyHandler({ keyCode, inputEvent: true }, nativeElement);\r\n    }\r\n  }\r\n\r\n  // @param nativeElement is the alternative text element in an iframe scenario\r\n  keyHandler(event: any, nativeElement: HTMLInputElement = this._element.nativeElement) {\r\n    this.lastKeyCode = event.keyCode;\r\n\r\n    if (event.isComposing || event.keyCode === KEY_BUFFERED) {\r\n      return;\r\n    }\r\n\r\n    let val: string = getValue(nativeElement);\r\n    let pos = getCaretPosition(nativeElement, this.iframe);\r\n    let charPressed = event.key;\r\n    if (!charPressed) {\r\n      let charCode = event.which || event.keyCode;\r\n      if (!event.shiftKey && (charCode >= 65 && charCode <= 90)) {\r\n        charPressed = String.fromCharCode(charCode + 32);\r\n      }\r\n      // else if (event.shiftKey && charCode === KEY_2) {\r\n      //   charPressed = this.config.triggerChar;\r\n      // }\r\n      else {\r\n        // TODO (dmacfarlane) fix this for non-alpha keys\r\n        // http://stackoverflow.com/questions/2220196/how-to-decode-character-pressed-from-jquerys-keydowns-event-handler?lq=1\r\n        charPressed = String.fromCharCode(event.which || event.keyCode);\r\n      }\r\n    }\r\n    if (event.keyCode == KEY_ENTER && event.wasClick && pos < this.startPos) {\r\n      // put caret back in position prior to contenteditable menu click\r\n      pos = this.startNode.length;\r\n      setCaretPosition(this.startNode, pos, this.iframe);\r\n    }\r\n    //console.log(\"keyHandler\", this.startPos, pos, val, charPressed, event);\r\n\r\n    let config = this.triggerChars[charPressed];\r\n    if (config) {\r\n      this.activeConfig = config;\r\n      this.startPos = event.inputEvent ? pos - 1 : pos;\r\n      this.startNode = (this.iframe ? this.iframe.contentWindow.getSelection() : window.getSelection()).anchorNode;\r\n      this.searching = true;\r\n      this.searchString = null;\r\n      this.showSearchList(nativeElement);\r\n      this.updateSearchList();\r\n\r\n      if (config.returnTrigger) {\r\n        this.searchTerm.emit(config.triggerChar);\r\n      }\r\n\r\n    }\r\n    else if (this.startPos >= 0 && this.searching) {\r\n      if (pos <= this.startPos) {\r\n        this.searchList.hidden = true;\r\n      }\r\n      // ignore shift when pressed alone, but not when used with another key\r\n      else if (event.keyCode !== KEY_SHIFT &&\r\n        !event.metaKey &&\r\n        !event.altKey &&\r\n        !event.ctrlKey &&\r\n        pos > this.startPos\r\n      ) {\r\n        if (!this.activeConfig.allowSpace && event.keyCode === KEY_SPACE) {\r\n          this.startPos = -1;\r\n        }\r\n        else if (event.keyCode === KEY_BACKSPACE && pos > 0) {\r\n          pos--;\r\n          if (pos == this.startPos) {\r\n            this.stopSearch();\r\n          }\r\n        }\r\n        else if (!this.searchList.hidden) {\r\n          if (event.keyCode === KEY_TAB || event.keyCode === KEY_ENTER) {\r\n            this.stopEvent(event);\r\n            const text = this.activeConfig.mentionSelect(this.searchList.activeItem);\r\n            // value is inserted without a trailing space for consistency\r\n            // between element types (div and iframe do not preserve the space)\r\n            insertValue(nativeElement, this.startPos, pos, text, this.iframe);\r\n            // fire input event so angular bindings are updated\r\n            if (\"createEvent\" in document) {\r\n              let evt = document.createEvent(\"HTMLEvents\");\r\n              if (this.iframe) {\r\n                // a 'change' event is required to trigger tinymce updates\r\n                evt.initEvent(\"change\", true, false);\r\n              }\r\n              else {\r\n                evt.initEvent(\"input\", true, false);\r\n              }\r\n              // this seems backwards, but fire the event from this elements nativeElement (not the\r\n              // one provided that may be in an iframe, as it won't be propogate)\r\n              this._element.nativeElement.dispatchEvent(evt);\r\n            }\r\n            this.startPos = -1;\r\n            this.stopSearch();\r\n            return false;\r\n          }\r\n          else if (event.keyCode === KEY_ESCAPE) {\r\n            this.stopEvent(event);\r\n            this.stopSearch();\r\n            return false;\r\n          }\r\n          else if (event.keyCode === KEY_DOWN) {\r\n            this.stopEvent(event);\r\n            this.searchList.activateNextItem();\r\n            return false;\r\n          }\r\n          else if (event.keyCode === KEY_UP) {\r\n            this.stopEvent(event);\r\n            this.searchList.activatePreviousItem();\r\n            return false;\r\n          }\r\n        }\r\n\r\n        if (event.keyCode === KEY_LEFT || event.keyCode === KEY_RIGHT) {\r\n          this.stopEvent(event);\r\n          return false;\r\n        }\r\n        else if (this.searching) {\r\n          let mention = val.substring(this.startPos + 1, pos);\r\n          if (event.keyCode !== KEY_BACKSPACE && !event.inputEvent) {\r\n            mention += charPressed;\r\n          }\r\n          this.searchString = mention;\r\n          if (this.activeConfig.returnTrigger) {\r\n            const triggerChar = (this.searchString || event.keyCode === KEY_BACKSPACE) ? val.substring(this.startPos, 1) : '';\r\n            this.searchTerm.emit(triggerChar + this.searchString);\r\n          } else {\r\n            this.searchTerm.emit(this.searchString);\r\n          }\r\n          this.updateSearchList();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // exposed for external calls to open the mention list, e.g. by clicking a button\r\n  public startSearch(triggerChar?: string, nativeElement: HTMLInputElement = this._element.nativeElement) {\r\n    triggerChar = triggerChar || this.mentionConfig.triggerChar || this.DEFAULT_CONFIG.triggerChar;\r\n    const pos = getCaretPosition(nativeElement, this.iframe);\r\n    insertValue(nativeElement, pos, pos, triggerChar, this.iframe);\r\n    this.keyHandler({ key: triggerChar, inputEvent: true }, nativeElement);\r\n  }\r\n\r\n  stopSearch() {\r\n    this.closed.emit();\r\n\r\n    if (this.searchList) {\r\n      this.searchList.hidden = true;\r\n    }\r\n    this.activeConfig = null;\r\n    this.searching = false;\r\n  }\r\n\r\n  updateSearchList() {\r\n    let matches: any[] = [];\r\n    if (this.activeConfig && this.activeConfig.items) {\r\n      let objects = this.activeConfig.items;\r\n      // disabling the search relies on the async operation to do the filtering\r\n      if (!this.activeConfig.disableSearch && this.searchString && this.activeConfig.labelKey) {\r\n        let searchStringLowerCase = this.searchString.toLowerCase();\r\n        objects = objects.filter(e => e[this.activeConfig.labelKey].toLowerCase().startsWith(searchStringLowerCase));\r\n      }\r\n      matches = objects;\r\n      if (this.activeConfig.maxItems > 0) {\r\n        matches = matches.slice(0, this.activeConfig.maxItems);\r\n      }\r\n    }\r\n    // update the search list\r\n    if (this.searchList) {\r\n      this.searchList.items = matches;\r\n      this.searchList.hidden = matches.length == 0;\r\n    }\r\n  }\r\n\r\n  showSearchList(nativeElement: HTMLInputElement) {\r\n    this.opened.emit();\r\n\r\n    if (this.searchList == null) {\r\n      let componentFactory = this._componentResolver.resolveComponentFactory(MentionListComponent);\r\n      let componentRef = this._viewContainerRef.createComponent(componentFactory);\r\n      this.searchList = componentRef.instance;\r\n      this.searchList.itemTemplate = this.mentionListTemplate;\r\n      componentRef.instance['itemClick'].subscribe(() => {\r\n        nativeElement.focus();\r\n        let fakeKeydown = { keyCode: KEY_ENTER, wasClick: true };\r\n        this.keyHandler(fakeKeydown, nativeElement);\r\n      });\r\n    }\r\n    this.searchList.labelKey = this.activeConfig.labelKey;\r\n    this.searchList.dropUp = this.activeConfig.dropUp;\r\n    this.searchList.styleOff = this.mentionConfig.disableStyle;\r\n    this.searchList.activeIndex = 0;\r\n    this.searchList.position(nativeElement, this.iframe);\r\n    window.setTimeout(() => this.searchList.reset());\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MentionDirective } from './mention.directive';\r\nimport { MentionListComponent } from './mention-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MentionDirective,\r\n    MentionListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MentionDirective\r\n  ],\r\n  entryComponents: [\r\n    MentionListComponent\r\n  ]\r\n})\r\nexport class MentionModule { }\r\n"]}